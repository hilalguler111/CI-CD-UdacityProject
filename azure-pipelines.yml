# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: 'MyServiceConnection'

  # Web app name
  webAppName: 'webapphilal'

  # Environment name
  environmentName: 'CI-CD-UdacityProject'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

pool: myAgentPool

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool: myAgentPool
    steps:    
    - script: echo Hello, world!
      displayName: 'Run a one-line script'

    - script: |
        python -m pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
      displayName: 'Install Python dependencies'
      workingDirectory: $(projectRoot)

    - script: |
        sudo apt-get update
        sudo apt-get install -y zip # Install zip command
      displayName: 'Install zip'
      workingDirectory: $(projectRoot)

    - script: |
        export PATH=$HOME/.local/bin:$PATH
        make install
        make lint
      displayName: 'Run lint tests'
      workingDirectory: $(projectRoot)
    
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool: myAgentPool
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - script: |
              echo Add other tasks to build, test, and deploy your project.
              echo See https://aka.ms/yaml
            displayName: 'Run a multi-line script'

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              appType: 'webAppLinux'